<alfresco-config>

	<!-- Global config section -->
	<config replace="true">
		<flags>
			<!-- Developer debugging setting to turn on DEBUG mode for client scripts 
				in the browser -->
			<client-debug>true</client-debug>

			<!-- LOGGING can always be toggled at runtime when in DEBUG mode (Ctrl, 
				Ctrl, Shift, Shift). This flag automatically activates logging on page load. -->
			<client-debug-autologging>false</client-debug-autologging>
		</flags>

		<header>
			<app-items>
				<!-- defaults: icon="{id}.png" label="header.{id}.label" description="header.{id}.description" -->
				<item type="link" id="my-dashboard">{userdashboardpage}</item>
				<item type="link" id="my-homefolder" condition="conditionRepositoryRootNode">/repository
				</item>
				<item type="js" id="sites">Alfresco.module.Sites</item>
				<item type="link" id="people">/people-finder</item>
				<item type="container" id="more">
					<container-group id="my">
						<item type="link" id="my-tasks">/my-tasks</item>
						<item type="link" id="my-workflows">/my-workflows</item>
						<item type="link" id="my-content">/user/user-content</item>
						<item type="link" id="my-sites">/user/user-sites</item>
						<item type="link" id="my-profile">{userprofilepage}</item>
					</container-group>
					<container-group id="tools" permission="admin">
						<item type="link" id="application">/console/admin-console/application
						</item>
						<item type="link" id="groups">/console/admin-console/groups</item>
						<item type="link" id="replication-jobs" condition="!conditionEditionTeam">/console/admin-console/replication-jobs
						</item>
						<item type="link" id="repository">/console/admin-console/repository</item>
						<item type="link" id="trashcan">/console/admin-console/trashcan</item>
						<item type="link" id="users">/console/admin-console/users</item>
						<item type="link" id="more">/console/admin-console/</item>
					</container-group>
				</item>
			</app-items>
			<user-items>
				<item type="container" id="user" icon="" description="">
					<container-group id="usermenu" label="">
						<item type="user" id="status">{userprofilepage}</item>
						<item type="link" id="my-profile">{userprofilepage}</item>
						<item type="link" id="change-password" condition="user.capabilities.isMutable">/user/change-password
						</item>
						<item type="external-link" id="help">{share-help}</item>
						<item type="link" id="logout" condition="!context.externalAuthentication">/dologout</item>
					</container-group>
				</item>
			</user-items>
			<dependencies>
				<css src="/modules/create-site.css" />
				<css src="/modules/header/sites.css" />
				<js src="/modules/create-site.js" />
				<js src="/modules/header/sites.js" />
			</dependencies>
		</header>
	</config>

	<config evaluator="string-compare" condition="WebFramework">
		<web-framework>
			<!-- SpringSurf Autowire Runtime Settings -->
			<!-- Developers can set mode to 'development' to disable; SpringSurf caches, 
				FreeMarker template caching and Rhino JavaScript compilation. -->
			<autowire>
				<!-- Pick the mode: "production" or "development" -->
				<mode>production</mode>
			</autowire>

			<!-- Allows extension modules with <auto-deploy> set to true to be automatically 
				deployed -->
			<module-deployment>
				<mode>manual</mode>
				<enable-auto-deploy-modules>true</enable-auto-deploy-modules>
			</module-deployment>
		</web-framework>
	</config>

	<!-- Document Library config section -->
	<config evaluator="string-compare" condition="DocumentLibrary"
		replace="true">

		<tree>
			<!-- Whether the folder Tree component should enumerate child folders 
				or not. This is a relatively expensive operation, so should be set to "false" 
				for Repositories with broad folder structures. -->
			<evaluate-child-folders>false</evaluate-child-folders>

			<!-- Optionally limit the number of folders shown in treeview throughout 
				Share. -->
			<maximum-folder-count>-1</maximum-folder-count>
		</tree>

		<!-- Used by the "Manage Aspects" action For custom aspects, remember to 
			also add the relevant i18n string(s) aspect.cm_myaspect=My Aspect -->
		<aspects>
			<!-- Aspects that a user can see -->
			<visible>
			</visible>

			<!-- Aspects that a user can add. Same as "visible" if left empty -->
			<addable>
			</addable>

			<!-- Aspects that a user can remove. Same as "visible" if left empty -->
			<removeable>
			</removeable>
		</aspects>

		<!-- Used by the "Change Type" action Define valid subtypes using the following 
			example: <type name="cm:content"> <subtype name="cm:mysubtype" /> </type> 
			Remember to also add the relevant i18n string(s): type.cm_mysubtype=My SubType -->
		<types>
			<type name="cm:content">
				<subtype name="akdm:document" />
				<subtype name="akdm:instruction" />
				<subtype name="akdm:ordinance" />
				<subtype name="akdm:manual" />
				<subtype name="akdm:protocol" />
				<subtype name="akdm:generaldocument" />
				<subtype name="akdm:economydocument" />
				<subtype name="akdm:byggredadocument" />
			</type>

			<type name="cm:folder">
				<subtype name="akdm:folder" />
			</type>
		</types>

		<!-- If set, will present a WebDAV link for the current item on the Document 
			and Folder details pages. Also used to generate the "View in Alfresco Explorer" 
			action for folders. <repository-url>http://localhost:8080/alfresco</repository-url> -->
		<!-- Google Docs™ integration -->
		<google-docs>
			<!-- Enable/disable the Google Docs UI integration (Extra types on Create 
				Content menu, Google Docs actions). -->
			<enabled>false</enabled>

			<!-- The mimetypes of documents Google Docs allows you to create via the 
				Share interface. The I18N label is created from the "type" attribute, e.g. 
				google-docs.doc=Google Docs&trade; Document -->
			<creatable-types>
				<creatable type="doc">application/msword</creatable>
				<creatable type="xls">application/vnd.ms-excel</creatable>
				<creatable type="ppt">application/vnd.ms-powerpoint</creatable>
			</creatable-types>
		</google-docs>

		<!-- File upload configuration -->
		<file-upload>
			<!-- Adobe Flash™ In certain environments, an HTTP request originating 
				from Flash cannot be authenticated using an existing session. See: http://bugs.adobe.com/jira/browse/FP-4830 
				For these cases, it is useful to disable the Flash-based uploader for Share 
				Document Libraries. -->
			<adobe-flash-enabled>true</adobe-flash-enabled>
		</file-upload>

		<!-- Create Content menu items, can be of 3 types matching the usual doclib 
			action config: * "link" - accepts a "href" param that will be passed a nodeRef 
			token for substitution, used for external links * "pagelink" - accepts a 
			"page" param that will be passed a nodeRef token for substitution, used for 
			Share links * "javascript" - accepts & "function" param of an action that 
			will get the current folder item as first argument. I.e. <content id="plain-text" 
			label="create-content.text" icon="text" type="pagelink"> <param name="page">create-content?destination={nodeRef}&amp;itemId=cm:content&amp;mimeType=text/plain</param> 
			<permissions> <permission allow="true">SomeUserPermissions</permission> </permissions> 
			</content> Note that the "CreateChildren" permission is always required and 
			will disable the entire menu if no granted for a folder. Also note that the 
			old/untyped simple config still is allowed, the config snippet below will 
			automatically be converted to a "pagelink" as in the example above. <content 
			id="plain-text" label="create-content.text" icon="text" itemid="cm:content" 
			mimetype="text/plain" permission="SomeUserPermissions"/> -->
		<create-content>
			<content id="instruction" label="type.akdm_instruction" type="pagelink"
				index="10" icon="text">
				<param name="page">create-content?destination={nodeRef}&amp;itemId=akdm:instruction
				</param>
			</content>
			<content id="ordinance" label="type.akdm_ordinance" type="pagelink"
				index="20" icon="text">
				<param name="page">create-content?destination={nodeRef}&amp;itemId=akdm:ordinance
				</param>
			</content>
			<content id="listpul" label="type.akdm_listpul" type="pagelink"
				index="30" icon="text">
				<param name="page">create-content?destination={nodeRef}&amp;itemId=akdm:listpul
				</param>
			</content>
			<content id="generaldocument" label="type.akdm_generaldocument"
				type="pagelink" index="40" icon="text">
				<param name="page">create-content?destination={nodeRef}&amp;itemId=akdm:generaldocument
				</param>
			</content>
			<content id="manual" label="type.akdm_manual" type="pagelink"
				index="50" icon="text">
				<param name="page">create-content?destination={nodeRef}&amp;itemId=akdm:manual
				</param>
			</content>
			<content id="internalvalidation" label="type.akdm_internalvalidation"
				type="pagelink" index="60" icon="text">
				<param name="page">create-content?destination={nodeRef}&amp;itemId=akdm:internalvalidation
				</param>
			</content>
			<content id="protocol" label="type.akdm_protocol" type="pagelink"
				index="70" icon="text">
				<param name="page">create-content?destination={nodeRef}&amp;itemId=akdm:protocol
				</param>
			</content>

			<content id="issuelist" label="type.akdm_issuelist" type="pagelink"
				index="80" icon="text">
				<param name="page">create-content?destination={nodeRef}&amp;itemId=akdm:issuelist
				</param>
			</content>


		</create-content>

		<create-content-by-template>false</create-content-by-template>

		<!-- Custom Metadata Templates for the Document Library Browse View Use 
			view="simple" or view="detailed" to limit the display to one particular view. -->
		<metadata-templates>
			<!-- Default (fallback) -->
			<template id="default">
				<banner index="10" id="lockBanner"
					evaluator="evaluator.doclib.metadata.hasLockBanner">{lockBanner}</banner>
				<banner index="20" id="syncTransientError"
					evaluator="evaluator.doclib.metadata.hasSyncTransientErrorBanner">{syncTransientError}</banner>
				<banner index="30" id="syncFailed"
					evaluator="evaluator.doclib.metadata.hasSyncFailedBanner">{syncFailed}</banner>
				<line index="10" id="date">{date}{size}</line>
				<line index="20" id="description">{description}</line>
				<line index="30" id="tags">{tags}</line>
				<line index="40" id="categories" evaluator="evaluator.doclib.metadata.hasCategories">{categories}</line>
				<line index="50" id="social">{social}</line>
			</template>

			<!-- Working Copies -->
			<template id="isWorkingCopy">
				<evaluator>evaluator.doclib.metadata.isWorkingCopy</evaluator>
				<banner index="10" id="lockBanner"
					evaluator="evaluator.doclib.metadata.hasLockBanner">{lockBanner}</banner>
				<banner index="20" id="syncTransientError"
					evaluator="evaluator.doclib.metadata.hasSyncTransientErrorBanner">{syncTransientError}</banner>
				<banner index="30" id="syncFailed"
					evaluator="evaluator.doclib.metadata.hasSyncFailedBanner">{syncFailed}</banner>
				<line index="10" id="date">{date}{size}</line>
				<line index="20" id="description">{description}</line>
			</template>

			<!-- Dictionary Models -->
			<template id="dictionaryModel">
				<evaluator>evaluator.doclib.metadata.isDictionaryModel</evaluator>
				<banner index="10" id="lockBanner"
					evaluator="evaluator.doclib.metadata.hasLockBanner">{lockBanner}</banner>
				<banner index="20" id="syncTransientError"
					evaluator="evaluator.doclib.metadata.hasSyncTransientErrorBanner">{syncTransientError}</banner>
				<banner index="30" id="syncFailed"
					evaluator="evaluator.doclib.metadata.hasSyncFailedBanner">{syncFailed}</banner>
				<line index="10" id="date">{date}</line>
				<line index="20" id="description">{description}</line>
				<line index="30" id="dictionaryModel" simpleView="true">{modelActive
					label.modelActive}{modelName label.modelName}{modelDescription
					label.modelDescription}
				</line>
			</template>

			<!-- Replication Transfer Targets -->
			<template id="transferTarget">
				<evaluator>evaluator.doclib.metadata.isTransferTarget</evaluator>
				<banner index="10" id="lockBanner"
					evaluator="evaluator.doclib.metadata.hasLockBanner">{lockBanner}</banner>
				<banner index="20" id="syncTransientError"
					evaluator="evaluator.doclib.metadata.hasSyncTransientErrorBanner">{syncTransientError}</banner>
				<banner index="30" id="syncFailed"
					evaluator="evaluator.doclib.metadata.hasSyncFailedBanner">{syncFailed}</banner>
				<line index="10" id="date">{date}</line>
				<line index="20" id="description">{description}</line>
				<line index="30" id="transferTarget" simpleView="true">{trx_enabled
					label.trx_enabled}{trx_endpointhost
					label.trx_endpointhost}{trx_endpointport label.trx_endpointport}
				</line>
			</template>
		</metadata-templates>

		<!-- Sorting Options The 'sort' config element contains the name of the 
			content model field to sort against and can be of the form: - short QName 
			string e.g. "cm:name" - any other valid sortable fts-alfresco special field 
			e.g. "TYPE" The field can be optionally followed by |true or |false to indicate 
			sort direction, where true = ascending, false = descending -->
		<sorting>
			<sort label="label.title">cm:title|true</sort>
			<sort label="label.name">cm:name|true</sort>
			<sort label="label.popularity">cm:likesRatingSchemeCount|false</sort>
			<sort label="label.description">cm:description</sort>
			<sort label="label.created">cm:created</sort>
			<sort label="label.creator">cm:creator</sort>
			<sort label="label.modified">cm:modified</sort>
			<sort label="label.modifier">cm:modifier</sort>
			<sort label="label.size">cm:content.size</sort>
			<sort label="label.mimetype">cm:content.mimetype</sort>
			<sort label="label.type">TYPE</sort>
		</sorting>
	</config>


	<config replace="true" evaluator="string-compare" condition="AdvancedSearch">
		<advanced-search>
			<!-- Forms for the advanced search type list -->
			<forms>
				<!-- The 'form' config element contains the name of the model type of 
					the form to display. The element supports the following optional attributes: 
					id = form id, the id of "search" will be assumed if not set label = label 
					text to display - defaults to model type if not set labelId = I18N message 
					id of label text to display description = description text to display descriptionId 
					= I18N message id of description text to display -->
				<form labelId="search.form.akdm_instruction.title"
					descriptionId="search.form.akdm_instruction.desc">akdm:instruction</form>
				<form labelId="search.form.akdm_byggreda.title" descriptionId="search.form.akdm_byggreda.desc">akdm:byggredadocument
				</form>
				<form labelId="search.form.akdm_ordinance.title" descriptionId="search.form.akdm_ordinance.desc">
					akdm:ordinance
				</form>
				<form labelId="search.form.akdm_listpul.title" descriptionId="search.form.akdm_listpul.desc">akdm:listpul
				</form>
				<form labelId="search.form.akdm_generaldocument.title"
					descriptionId="search.form.akdm_generaldocument.desc">akdm:generaldocument</form>
				<form labelId="search.form.akdm_manual.title" descriptionId="search.form.akdm_manual.desc">akdm:manual
				</form>
				<form labelId="search.form.akdm_internalvalidation.title"
					descriptionId="search.form.akdm_internalvalidation.desc">akdm:internalvalidation</form>
				<form labelId="search.form.akdm_protocol.title" descriptionId="search.form.akdm_protocol.desc">akdm:protocol
				</form>
				<form labelId="search.form.akdm_issuelist.title" descriptionId="search.form.akdm_issuelist.desc">
					akdm:issuelist
				</form>
				<form labelId="search.form.akdm_document.title" descriptionId="search.form.akdm_document.desc">
					akdm:document
				</form>
				<form labelId="search.form.label.cm_folder" descriptionId="search.form.desc.cm_folder">cm:folder
				</form>
			</forms>
		</advanced-search>
	</config>


	<!-- Custom DocLibActions config section -->
	<config evaluator="string-compare" condition="DocLibActions">
		<actionGroups>
			<actionGroup id="document-browse">

				<!-- Simple Repo Actions -->
				<!-- <action index="340" id="document-extract-metadata" /> <action index="350" 
					id="document-increment-counter" /> -->

				<!-- Dialog Repo Actions -->
				<!-- <action index="360" id="document-transform" /> <action index="370" 
					id="document-transform-image" /> <action index="380" id="document-execute-script" 
					/> -->

			</actionGroup>
		</actionGroups>
	</config>

	<!-- Global folder picker config section -->
	<config evaluator="string-compare" condition="GlobalFolder">
		<siteTree>
			<container type="cm:folder">
				<!-- Use a specific label for this container type in the tree -->
				<rootLabel>location.path.documents</rootLabel>
				<!-- Use a specific uri to retreive the child nodes for this container 
					type in the tree -->
				<uri>slingshot/doclib/treenode/site/{site}/{container}{path}?children={evaluateChildFoldersSite}&amp;max={maximumFolderCountSite}
				</uri>
			</container>
		</siteTree>
	</config>

	<!-- Repository Library config section -->
	<config evaluator="string-compare" condition="RepositoryLibrary"
		replace="true">
		<!-- Root nodeRef or xpath expression for top-level folder. e.g. alfresco://user/home, 
			/app:company_home/st:sites/cm:site1 If using an xpath expression, ensure 
			it is properly ISO9075 encoded here. -->
		<root-node>alfresco://user/home</root-node>

		<tree>
			<!-- Whether the folder Tree component should enumerate child folders 
				or not. This is a relatively expensive operation, so should be set to "false" 
				for Repositories with broad folder structures. -->
			<evaluate-child-folders>false</evaluate-child-folders>

			<!-- Optionally limit the number of folders shown in treeview throughout 
				Share. -->
			<maximum-folder-count>500</maximum-folder-count>
		</tree>
	</config>

	<!-- example port config used to access remote Alfresco server (default 
		is 8080) 
	<config evaluator="string-compare" condition="Remote">
		<remote>
			<endpoint>
				<id>alfresco-noauth</id>
				<name>Alfresco - unauthenticated access</name>
				<description>Access
					to Alfresco Repository WebScripts that do not require authentication
				</description>
				<connector-id>alfresco</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/s</endpoint-url>
				<identity>none</identity>
			</endpoint>
			<endpoint>
				<id>alfresco</id>
				<name>Alfresco
					- user access
				</name>
				<description>Access to Alfresco Repository WebScripts
					that require user authentication
				</description>
				<connector-id>alfresco</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/s</endpoint-url>
				<identity>user</identity>
			</endpoint>
			<endpoint>
				<id>alfresco-feed</id>
				<name>Alfresco Feed</name>
				<description>Alfresco Feed - supports basic HTTP authentication via
					the EndPointProxyServlet</description>
				<connector-id>http</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/s</endpoint-url>
				<basic-auth>true</basic-auth>
				<identity>user</identity>
			</endpoint>
			<endpoint>
				<id>activiti-admin</id>
				<name>Activiti Admin UI - user access</name>
				<description>Access
					to Activiti Admin UI, that requires user authentication
				</description>
				<connector-id>activiti-admin-connector</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/activiti-admin
				</endpoint-url>
				<identity>user</identity>
			</endpoint>
		</remote>
	</config>-->
</alfresco-config>