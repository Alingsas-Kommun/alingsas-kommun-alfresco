<alfresco-config>
	<!-- Global config section -->
	<config replace="true">
		<flags>
			<!-- Developer debugging setting to turn on DEBUG mode for client scripts 
				in the browser -->
			<client-debug>true</client-debug>

			<!-- LOGGING can always be toggled at runtime when in DEBUG mode (Ctrl, 
				Ctrl, Shift, Shift). This flag automatically activates logging on page load. -->
			<client-debug-autologging>false</client-debug-autologging>
		</flags>
	</config>

	<config evaluator="string-compare" condition="WebFramework">
		<web-framework>
			<!-- SpringSurf Autowire Runtime Settings -->
			<!-- Developers can set mode to 'development' to disable; SpringSurf caches, 
				FreeMarker template caching and Rhino JavaScript compilation. -->
			<autowire>
				<!-- Pick the mode: "production" or "development" -->
				<mode>production</mode>
			</autowire>

			<!-- Allows extension modules with <auto-deploy> set to true to be automatically 
				deployed -->
			<module-deployment>
				<mode>manual</mode>
				<enable-auto-deploy-modules>true</enable-auto-deploy-modules>
			</module-deployment>
		</web-framework>
	</config>
	
	<!-- Help links override -->
	<config evaluator="string-compare" condition="HelpPages">
		<help-pages>
			<share-help>http://intranet3.alingsas.se</share-help>
			<share-tutorial>http://intranet3.alingsas.se</share-tutorial>
		</help-pages>
	</config>

	
   <!-- Disable the CSRF Token Filter -->
   <config evaluator="string-compare" condition="CSRFPolicy" replace="true">
      <filter/>
   </config>

   <!--
      To run the CSRF Token Filter behind 1 or more proxies that do not rewrite the Origin or Referere headers:

      1. Copy the "CSRFPolicy" default config in share-security-config.xml and paste it into this file.
      2. Replace the old config by setting the <config> element's "replace" attribute to "true" like below:
         <config evaluator="string-compare" condition="CSRFPolicy" replace="true">
      3. To every <action name="assertReferer"> element add the following child element
         <param name="referer">http://www.proxy1.com/.*|http://www.proxy2.com/.*</param>
      4. To every <action name="assertOrigin"> element add the following child element
         <param name="origin">http://www.proxy1.com|http://www.proxy2.com</param>
   -->

   <!--
      Remove the default wildcard setting and use instead a strict whitelist of the only domains that shall be allowed
      to be used inside iframes (i.e. in the WebView dashlet on the dashboards)
   -->
   <!--
   <config evaluator="string-compare" condition="IFramePolicy" replace="true">
      <cross-domain>
         <url>http://www.trusted-domain-1.com/</url>
         <url>http://www.trusted-domain-2.com/</url>
      </cross-domain>
   </config>
   -->

   <!-- Turn off header that stops Share from being displayed in iframes on pages from other domains -->
   <!--
   <config evaluator="string-compare" condition="SecurityHeadersPolicy">
      <headers>
         <header>
            <name>X-Frame-Options</name>
            <enabled>false</enabled>
         </header>
      </headers>
   </config>
   -->

   <!-- Prevent browser communication over HTTP (for HTTPS servers) -->
   <!--
   <config evaluator="string-compare" condition="SecurityHeadersPolicy">
      <headers>
         <header>
            <name>Strict-Transport-Security</name>
            <value>max-age=31536000</value>
         </header>
      </headers>
   </config>
   -->

	<!-- example port config used to access remote Alfresco server (default 
		is 8080) -->
	<config evaluator="string-compare" condition="Remote" replace="false">
		<remote>
			<endpoint>
				<id>alfresco-noauth</id>
				<name>Alfresco - unauthenticated access</name>
				<description>Access
					to Alfresco Repository WebScripts that do not require authentication
				</description>
				<connector-id>alfresco</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/s</endpoint-url>
				<identity>none</identity>
			</endpoint>
			<endpoint>
				<id>alfresco</id>
				<name>Alfresco
					- user access
				</name>
				<description>Access to Alfresco Repository WebScripts
					that require user authentication
				</description>
				<connector-id>alfresco</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/s</endpoint-url>
				<identity>user</identity>
			</endpoint>
			<endpoint>
				<id>alfresco-feed</id>
				<name>Alfresco Feed</name>
				<description>Alfresco Feed - supports basic HTTP authentication via
					the EndPointProxyServlet</description>
				<connector-id>http</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/s</endpoint-url>
				<basic-auth>true</basic-auth>
				<identity>user</identity>
			</endpoint>
			<endpoint>
				<id>activiti-admin</id>
				<name>Activiti Admin UI - user access</name>
				<description>Access
					to Activiti Admin UI, that requires user authentication
				</description>
				<connector-id>activiti-admin-connector</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/activiti-admin
				</endpoint-url>
				<identity>user</identity>
			</endpoint>
		</remote>
	</config>
</alfresco-config>